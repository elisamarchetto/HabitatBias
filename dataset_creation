# iDiv page to download data
https://idata.idiv.de/ddm/Data/ShowData/3474?version=76

library(sf) # version ‘1.0.16’
library(terra) # version ‘1.7.71’
library(tidyverse) # version ‘2.0.0’

# download sPlotOpen dataset directly from R
devtools::install_github("andrewsiefert/sPlotOpenR", dependencies = T, force = T)

library(sPlotOpenR)

# download sPlotOpen dataset and load into R
data <- get_sPlot(load = T) 

DT <- data[["DT"]]
DT$Species <- gsub(DT$Species, pattern = ' ', replacement = '_')

# Separate data into species and non-species levels
species_level <- DT[grepl("_", DT$Species),]
NOspecies_level <- DT[!grepl("_", DT$Species),]

# Merge data
d <- merge(species_level, data[["header"]], by = 'PlotObservationID')

# Filter for Europe, Year >= 1992, and Location uncertainty < 250
d <- d[d$Continent=='Europe',]
d <- d %>% filter(Location_uncertainty < 250)

# European grid: 1) raster layer of 0.5 degree 2) projection in LAEA crs(10km of spatial resolution)

esy <- d%>%filter(!ESY=="?") %>%filter(!ESY=="+") %>% dplyr::select(ESY)%>%distinct()%>%drop_na()

d_esy <- d %>% inner_join(., esy, by="ESY")

#level2

d_esy$ESY2<- substr(d_esy$ESY, 1, 2)
d_esy <- d_esy %>% filter(!ESY2=="Y-")


#level1

d_esy$ESY3<- substr(d_esy$ESY2, 1, 1)


saveRDS(d_esy,"d_esy.rds")

v <- c("G", "E")
d_esy <- d_esy[d_esy$ESY3 %in% v, ]

#################### d G ########################
dcoord_ESY3_G <- d_esy %>%
  filter(ESY3=="G")%>%
  dplyr::select(Longitude, Latitude, PlotObservationID)%>%
  unique()%>%
  drop_na() %>%
  st_as_sf(coords = c("Longitude", "Latitude"), crs = st_crs("+proj=longlat +datum=WGS84")) %>%
  st_transform(crs = st_crs(3035)) %>%
  st_crop(., c(xmin = 1909300, ymin = 1120000, xmax = 7089300  , ymax =5500000))

yGe75_10v <- as.polygons(yGe75_10, value=FALSE, dissolve=FALSE)
yGev.sf <- st_as_sf(yGe75_10v)
yGev.sf <- st_make_valid(yGev.sf)
yGev.sf$lyr.1 <- rownames(yGev.sf)
OV <- st_intersects(dcoord_ESY3_G, yGev.sf)

OVG <- purrr::map_depth(OV, 1, ~ifelse(is.null(.x), NA, .x) )


OV_l <- unlist(OVG)
 

# dataframe of the plots within each grid cell
d_idG <- d_esy %>% filter(ESY3=="G")%>%
  dplyr::select(Longitude, Latitude, PlotObservationID)%>%
  unique()%>%
  drop_na() %>%
  st_as_sf(coords = c("Longitude", "Latitude"), crs = st_crs("+proj=longlat +datum=WGS84")) %>%
  st_transform(crs = st_crs(3035))%>%
  st_crop(., c(xmin = 1909300, ymin = 1120000, xmax = 7089300  , ymax =5500000))%>%
  data.frame(st_coordinates(st_cast(.,"MULTIPOINT")))%>%
  dplyr::select(-geometry)%>%
  cbind(., id=OV_l) %>%
  dplyr::select(id, PlotObservationID) %>%
  drop_na()

 

# final dataframe
d_ESY3_G <- d_esy %>% filter(ESY3=="G")%>% 
  dplyr::select(Longitude, Latitude, PlotObservationID, Species, Releve_area, Date_of_recording, ESY3, ESY2)%>%
  unique()%>%
  drop_na() %>%
  st_as_sf(coords = c("Longitude", "Latitude"), crs = st_crs("+proj=longlat +datum=WGS84")) %>%
  st_transform(crs = st_crs(3035))%>%
  st_crop(., c(xmin = 1909300, ymin = 1120000, xmax = 7089300  , ymax =5500000))%>%
  data.frame(st_coordinates(st_cast(.,"MULTIPOINT")))%>%
  dplyr::select(-geometry) %>% left_join(., d_idG, by="PlotObservationID") %>%
  drop_na()

saveRDS(d_ESY3_G, "d_ESY3_G75.rds")

#################### d E ########################
dcoord_ESY3_E <- d_esy %>%
  filter(ESY3=="E")%>%
  dplyr::select(Longitude, Latitude, PlotObservationID)%>%
  unique()%>%
  drop_na() %>%
  st_as_sf(coords = c("Longitude", "Latitude"), crs = st_crs("+proj=longlat +datum=WGS84")) %>%
  st_transform(crs = st_crs(3035)) %>%
  st_crop(., c(xmin = 1909300, ymin = 1120000, xmax = 7089300  , ymax =5500000))

yEe75_10v <- as.polygons(yEe75_10, value=FALSE, dissolve=FALSE)
yEev.sf <- st_as_sf(yEe75_10v)
yEev.sf <- st_make_valid(yEev.sf)
yEev.sf$lyr.1 <- rownames(yEev.sf)
OV <- st_intersects(dcoord_ESY3_E, yEev.sf)

OVE <- purrr::map_depth(OV, 1, ~ifelse(is.null(.x), NA, .x) )


OV_l <- unlist(OVE)
 

# dataframe of the plots within each grid cell
d_idE <- d_esy %>% filter(ESY3=="E")%>%
  dplyr::select(Longitude, Latitude, PlotObservationID)%>%
  unique()%>%
  drop_na() %>%
  st_as_sf(coords = c("Longitude", "Latitude"), crs = st_crs("+proj=longlat +datum=WGS84")) %>%
  st_transform(crs = st_crs(3035))%>%
  st_crop(., c(xmin = 1909300, ymin = 1120000, xmax = 7089300  , ymax =5500000))%>%
  data.frame(st_coordinates(st_cast(.,"MULTIPOINT")))%>%
  dplyr::select(-geometry)%>%
  cbind(., id=OV_l) %>%
  dplyr::select(id, PlotObservationID) %>%
  drop_na()

 

# final dataframe
d_ESY3_E <- d_esy %>% filter(ESY3=="E")%>% 
  dplyr::select(Longitude, Latitude, PlotObservationID, Species, Releve_area, Date_of_recording, ESY3, ESY2)%>%
  unique()%>%
  drop_na() %>%
  st_as_sf(coords = c("Longitude", "Latitude"), crs = st_crs("+proj=longlat +datum=WGS84")) %>%
  st_transform(crs = st_crs(3035))%>%
  st_crop(., c(xmin = 1909300, ymin = 1120000, xmax = 7089300  , ymax =5500000))%>%
  data.frame(st_coordinates(st_cast(.,"MULTIPOINT")))%>%
  dplyr::select(-geometry) %>% left_join(., d_idE, by="PlotObservationID") %>%
  drop_na()

saveRDS(d_ESY3_E, "d_ESY3_E75.rds")
